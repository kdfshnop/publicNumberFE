{"version":3,"sources":["components/jquery.upload.min.js"],"names":["$","fn","upload","options","opts","extend","defaults","each","generate","container","$input","document","createElement","addClass","attr","accept","append","change","selectFileImage","fileObj","file","files","Orientation","console","log","rFilter","test","type","EXIF","getData","getAllTags","getTag","oReader","FileReader","onload","e","image","Image","src","target","result","expectWidth","naturalWidth","expectHeight","naturalHeight","canvas","ctx","getContext","width","height","drawImage","base64","navigator","userAgent","match","rotateImg","toDataURL","css","encodeURIComponent","split","find","remove","readAsDataURL","img","direction","min_step","max_step","step","degree","Math","PI","rotate","jQuery"],"mappings":"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","file":"jquery.upload.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n 1. 项目名称：有房有客微信CDN框架\n 2. 页面名称：upload (jQuery插件 - 文件上传)\n 3. 作者：zhaohuagang@lifang.com\n 4. 实例：\n    $(\".portrait-uploader\").upload({\n        \"accept\" : \"image/jpg,image/jpeg,image/png,image/gif\"\n    }) ;\n 5. 在一个容器内增加文件上传缩略图及句柄\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n(function ($) {\n    $.fn.upload = function (options) {\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        将每个upload加上对应的配置属性\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        var opts = $.extend({}, $.fn.upload.defaults, options);\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         执行事件添加后返回\n         -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        return this.each(function () {\n            $.fn.upload.generate(this, opts);\n        });\n    };\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    绘制相应的dom节点\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    $.fn.upload.generate = function (container, opts) {\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        绘制上传句柄\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        var $input = $(document.createElement(\"INPUT\")).addClass(\"uploader-input\").attr(\"type\", \"file\").attr(\"accept\", opts.accept);\n        // if(navigator.userAgent.indexOf(\"iPhone\") < 0) {\n        //     $input.attr(\"capture\",\"camera\");\n        // }\n        $(container).append($input);\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        当上传句柄文件域值改变的时候触发事件监听\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $input.change(function () {\n            // var reader = new FileReader();\n            // reader.readAsDataURL(this.files[0]);\n            // reader.onload = function () {\n            //     // $(container).css({ \"background-image\": \"url(\" + this.result + \")\" }).attr(\"data-img\", encodeURIComponent(this.result.split(\",\")[1]));\n            //     $(container).find(\".upload-placeholder\").remove();\n            // };\n            selectFileImage(this,container);\n        });\n    };\n    function selectFileImage(fileObj,container) {\n        var file = fileObj.files['0'];\n        //图片方向角 added by lzk\n        var Orientation = null;\n        if (file) {\n            console.log(\"正在上传,请稍后...\");\n            var rFilter = /^(image\\/jpeg|image\\/png)$/i; // 检查图片格式\n            if (!rFilter.test(file.type)) {\n                //showMyTips(\"请选择jpeg、png格式的图片\", false);\n                return;\n            }\n            // var URL = URL || webkitURL;\n            //获取照片方向角属性，用户旋转控制\n            EXIF.getData(file, function () {\n                // alert(EXIF.pretty(this));\n                EXIF.getAllTags(this);\n                //alert(EXIF.getTag(this, 'Orientation')); \n                Orientation = EXIF.getTag(this, 'Orientation');\n                //return;\n            });\n\n            var oReader = new FileReader();\n            oReader.onload = function (e) {\n                var image = new Image();\n                image.src = e.target.result;\n                image.onload = function () {\n                    var expectWidth = this.naturalWidth;\n                    var expectHeight = this.naturalHeight;\n                    if (this.naturalWidth > this.naturalHeight && this.naturalWidth > 800) {\n                        expectWidth = 800;\n                        expectHeight = expectWidth * this.naturalHeight / this.naturalWidth;\n                    } else if (this.naturalHeight > this.naturalWidth && this.naturalHeight > 1200) {\n                        expectHeight = 1200;\n                        expectWidth = expectHeight * this.naturalWidth / this.naturalHeight;\n                    }\n                    var canvas = document.createElement(\"canvas\");\n                    var ctx = canvas.getContext(\"2d\");\n                    canvas.width = expectWidth;\n                    canvas.height = expectHeight;\n                    ctx.drawImage(this, 0, 0, expectWidth, expectHeight);\n                    var base64 = null;\n                    //修复ios\n                    if (navigator.userAgent.match(/iphone/i)) {\n                        // console.log('iphone');\n                        //alert(expectWidth + ',' + expectHeight);\n                        //如果方向角不为1，都需要进行旋转 added by lzk\n                        if (Orientation != \"\" && Orientation != 1) {\n                            // alert('旋转处理');\n                            switch (Orientation) {\n                                case 6://需要顺时针（向左）90度旋转\n                                    // alert('需要顺时针（向左）90度旋转');\n                                    rotateImg(this, 'left', canvas);\n                                    break;\n                                case 8://需要逆时针（向右）90度旋转\n                                    // alert('需要顺时针（向右）90度旋转');\n                                    rotateImg(this, 'right', canvas);\n                                    break;\n                                case 3://需要180度旋转\n                                    // alert('需要180度旋转');\n                                    rotateImg(this, 'right', canvas);//转两次\n                                    rotateImg(this, 'right', canvas);\n                                    break;\n                            }\n                        }\n                    } \n                    base64 = canvas.toDataURL(\"image/jpeg\", 0.8);\n                    $(container).css({ \"background-image\": \"url(\" + base64 + \")\" }).attr(\"data-img\", encodeURIComponent(base64.split(\",\")[1]));\n                    $(container).find(\".upload-placeholder\").remove();\n                };\n            };\n            oReader.readAsDataURL(file);\n        }\n    }\n    //对图片旋转处理 added by lzk\n    function rotateImg(img, direction, canvas) {\n        //alert(img);\n        //最小与最大旋转方向，图片旋转4次后回到原方向  \n        var min_step = 0;\n        var max_step = 3;\n        //var img = document.getElementById(pid);  \n        if (img == null) return;\n        //img的高度和宽度不能在img元素隐藏后获取，否则会出错  \n        var height = img.height;\n        var width = img.width;\n        //var step = img.getAttribute('step');  \n        var step = 2;\n        if (step == null) {\n            step = min_step;\n        }\n        if (direction == 'right') {\n            step++;\n            //旋转到原位置，即超过最大值  \n            step > max_step && (step = min_step);\n        } else {\n            step--;\n            step < min_step && (step = max_step);\n        }\n        //img.setAttribute('step', step);  \n        /*var canvas = document.getElementById('pic_' + pid);  \n        if (canvas == null) {  \n            img.style.display = 'none';  \n            canvas = document.createElement('canvas');  \n            canvas.setAttribute('id', 'pic_' + pid);  \n            img.parentNode.appendChild(canvas);  \n        }  */\n        //旋转角度以弧度值为参数  \n        var degree = step * 90 * Math.PI / 180;\n        var ctx = canvas.getContext('2d');\n        switch (step) {\n            case 0:\n                canvas.width = width;\n                canvas.height = height;\n                ctx.drawImage(img, 0, 0);\n                break;\n            case 1:\n                canvas.width = height;\n                canvas.height = width;\n                ctx.rotate(degree);\n                ctx.drawImage(img, 0, -height);\n                break;\n            case 2:\n                canvas.width = width;\n                canvas.height = height;\n                ctx.rotate(degree);\n                ctx.drawImage(img, -width, -height);\n                break;\n            case 3:\n                canvas.width = height;\n                canvas.height = width;\n                ctx.rotate(degree);\n                ctx.drawImage(img, -width, 0);\n                break;\n        }\n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     upload默认配置\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    $.fn.upload.defaults = {\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        可以接受的文件扩展名列表，用半角逗号隔开，默认是上传图片，值为：image/jpg,image/jpeg,image/png,image/gif\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        \"accept\": \"image/jpg,image/jpeg,image/png,image/gif\"\n    };\n})(jQuery);"]}