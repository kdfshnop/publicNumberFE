"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：有房有客微信CDN框架
 2. 页面名称：profileEdit.js (个人资料编辑)
 3. 作者：zhaohuagang@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var ProfileEditController = function (_Controller) {
    _inherits(ProfileEditController, _Controller);

    function ProfileEditController() {
        _classCallCheck(this, ProfileEditController);

        var _this = _possibleConstructorReturn(this, (ProfileEditController.__proto__ || Object.getPrototypeOf(ProfileEditController)).call(this));

        document.title = "完善资料"; // 设置标题
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        选择的板块信息字段
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        _this.selectedTowns = "";
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        添加dom事件监听
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        _this.addEventListeners();
        return _this;
    }
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    添加dom事件监听
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(ProfileEditController, [{
        key: "addEventListeners",
        value: function addEventListeners() {
            var _this2 = this;

            require([this.appStaticPrefix + "/components/jquery.upload.min.js", this.appStaticPrefix + "/components/jquery.citypicker.min.js", this.appStaticPrefix + "/components/jquery.townpicker.min.js"], function () {
                $(".upload-handler").upload({ "accept": "image/*" });
                $("#citySelector").citypicker({
                    "callback": function callback(cityId) {
                        $("#cityId").val(cityId);
                    }
                });
                $("#townSelector").townpicker({
                    "controller": _this2,
                    "callback": function callback(data) {
                        _this2.selectedTowns = data;
                    }
                });
            });
            $("#submit").click(function () {
                _this2.submit();
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        提交数据
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "submit",
        value: function submit() {
            var headPortrait = $(".head-portrait .upload-handler").attr("data-img") || "";
            var idCardPict = $(".idcard .upload-handler").attr("data-img") || "";
            var realname = $("input[name='realname']").val();
            if (realname) realname = $.trim(realname);
            var idCard = $("input[name='idCard']").val();
            if (idCard) idCard = $.trim(idCard);
            var cityId = $("#cityId").val();
            if (cityId) cityId = $.trim(cityId);
            var towns = this.selectedTowns;
            var requestData = {
                "pic": headPortrait,
                "name": realname,
                "identity": idCard,
                "idcard": idCardPict,
                "cityId": cityId,
                "district": JSON.stringify(towns), // 这边有个问题 不把towns转成JSON字符串的话 传过去的参数是district[0].towns[0].id等,就是把数组拆分了
                "mobile": $("input[name=tel]").val(),
                "openId": $("input[name=openId]").val(),
                "agentId": $("input[name=agentId]").val(),
                "state": $("input[name=state]").val()
            };
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            数据校验
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if (!headPortrait) {
                $.tips("请上传您的头像！", 3);
                return;
            }
            if (!realname) {
                $.tips("请输入真实姓名！", 3);
                return;
            }
            if (!idCard) {
                $.tips("请输入身份证号！", 3);
                return;
            }
            if (!idCardPict) {
                $.tips("请上传身份证正面照！", 3);
                return;
            }
            if (!cityId) {
                $.tips("请选择城市！", 3);
                return;
            }
            if (!towns) {
                $.tips("请选择主营板块！", 3);
                return;
            }
            this.request(this.apiUrl.member.profileEdit, requestData, {
                type: "post",
                showLoadingTips: true,
                loadingTips: "请稍候...",
                successCallback: function successCallback(data) {
                    $("body > .tips").remove();
                    window.location.href = "/member/profile/result";
                },
                completeCallback: function completeCallback() {
                    $("#submit").css("pointer-events", "auto").text("提交");
                }
            });
            $("#submit").css("pointer-events", "none").text("提交中...");
        }
    }]);

    return ProfileEditController;
}(Controller);

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new ProfileEditController();
});
//# sourceMappingURL=profileEdit.min.js.map
