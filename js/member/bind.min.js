"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：有房有客微信CDN框架
 2. 页面名称：bind.js (手机绑定页)
 3. 作者：douyadong@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var BindController = function (_Controller) {
    _inherits(BindController, _Controller);

    function BindController() {
        _classCallCheck(this, BindController);

        var _this = _possibleConstructorReturn(this, (BindController.__proto__ || Object.getPrototypeOf(BindController)).call(this));

        _this.bindTel();
        return _this;
    }
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    获取验证码及绑定手机号
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(BindController, [{
        key: "bindTel",
        value: function bindTel() {
            var self = this;
            var telReg = /^1\d{10}$/;
            var timer = null; //定时器;
            var time = 60;
            var openId = $.cookie("openId");
            var state = $.cookie("state");
            $('.verify').click(function () {
                var tel = $('.tel').val();
                if (telReg.test(tel)) {
                    $('.verify').html(time + 's');
                    $('.verify').css('color', '#999999');
                    $('.verify').attr('disabled', true); //获取验证码按钮禁止点击;
                    timer = setInterval(function () {
                        time--;
                        if (time == 0) {
                            clearInterval(timer);
                            time = 60;
                            $('.verify').html('获取验证');
                            $('.verify').css('color', '#fc4c5a');
                            $('.verify').attr('disabled', false); //获取验证码按钮禁止点击;
                        } else {
                            $('.verify').html(time + "s");
                        }
                    }, 1000);
                    // 发送请求,获取验证码;
                    self.request(self.apiUrl.member.phoneAuthCode, { tel: tel, openId: openId }, {
                        type: "POST",
                        successCallback: function successCallback(data) {
                            console.log(data, '验证码');
                        },
                        errorCallback: function errorCallback(err) {
                            console.log(err, 'err');
                        }
                    });
                } else {
                    $.tips('请输入正确手机号', 2);
                }
            });
            $('.btn').click(function () {
                var tel = $('.tel').val();
                var code = $('.note input').val();
                if (!telReg.test(tel)) {
                    $.tips('请填写正确手机号', 2);
                } else if (!code) {
                    $.tips('请输入验证码', 2);
                } else {
                    $('.btn').attr('disabled', true);
                    // 发送请求;
                    self.request(self.apiUrl.member.bindSuccess, { tel: tel, code: code, openId: openId, state: state }, {
                        type: "post",
                        successCallback: function successCallback(data) {
                            $.cookie('agentId', data.data.agentId);
                            $('.btn').attr('disabled', false);
                            if (data.data.verifiedStatus == 4) {
                                location.href = data.data.targetUrl;
                            } else {
                                location.href = "/member/profile/edit";
                            }
                        },
                        errorCallback: function errorCallback(err) {
                            $('.btn').attr('disabled', false);
                        },
                        exceptionCallback: function exceptionCallback(data) {
                            $('.btn').attr('disabled', false);
                        }
                    });
                }
            });
            var env = $.cookie('env') || 'dev';
            var shareLinkDomain = "";
            var wechatCode = "";
            switch (env) {
                case "dev":
                    shareLinkDomain = "https://wechattest.yfyk365.com";
                    wechatCode = "5000001";
                    break;
                case "test":
                    shareLinkDomain = "https://wechattest.yfyk365.com";
                    wechatCode = "5000001";
                    break;
                case "sim":
                    shareLinkDomain = "https://wechatsim.yfyk365.com";
                    wechatCode = "4000001";
                    break;
                case "prod":
                    shareLinkDomain = "https://wechat.yfyk365.com";
                    wechatCode = "3000001";
                    break;
            };
            self.request(shareLinkDomain + "/base/getJsSdkSign.action?wechatCode=" + wechatCode, { requestUrl: window.location.href }, {
                successCallback: function successCallback(result) {
                    var data = result.data;
                    wx.config({
                        debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                        appId: data.appid, // 必填，企业号的唯一标识，此处填写企业号corpid
                        timestamp: data.timestamp, // 必填，生成签名的时间戳
                        nonceStr: data.nonce_str, // 必填，生成签名的随机串
                        signature: data.signature, // 必填，签名，见附录1
                        jsApiList: ['onMenuShareAppMessage', 'onMenuShareTimeline'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
                    });
                    wx.ready(function () {
                        wx.showOptionMenu();
                        console.log('config成功');
                        wx.onMenuShareTimeline({
                            link: shareLinkDomain + "/base/getAuthCode"
                        });
                        wx.onMenuShareAppMessage({
                            link: shareLinkDomain + "/base/getAuthCode"
                        });
                    });
                }
            });
        }
    }]);

    return BindController;
}(Controller);
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new BindController();
});
//# sourceMappingURL=bind.min.js.map
